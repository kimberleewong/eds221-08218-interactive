---
title: "eds221-08218-interactive"
author: "kimmy wong"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(here)
library(janitor)
library(patchwork)
library(paletteer)
library(ggExtra)
library(gghighlight)
library(ggbeeswarm)
library(ggrepel)

install.packages("paletteer")
install.packages("ggExtra")
install.packages("gghighlight")
install.packages("ggbeeswarm")
install.packages("ggrepel")
```

```{r}
lizards <- read_csv(here("data_tidy", "lizards.csv"))
```

```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point() +

ggplot(data = lizards) +
  geom_point(aes(x = total_length, y = weight))

ggplot() +
  geom_point(data = lizards, aes(x = total_length, y = weight))
```

```{r}
ggplot(data = lizards, aes(x = total_length)) +
  geom_histogram()
```

```{r}
ggplot(data = lizards, aes(y = common_name, x = weight)) +
  geom_jitter()
```

```{r}
ggplot(data = lizards, aes(weight)) +
  geom_histogram(color = "salmon",
                 fill = "pink",
                 size = .5,
                 linetype = "dashed")
```

```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point(color = "#094074",
             fill = "#adb9e3",
             shape = 22,
             size = 4.4,
             alpha = .2)
```

```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point(aes(color = common_name,
                 size = total_length),
             alpha = 0.6) +
  scale_color_discrete(type = c("#03256c", "#2541B2", "#1768AC", "#06BEE1", "#90C290", "#FCD3DE", "#EA526F" ))


  scale_color_brewer(palette = "Purples")
```

```{r}
ggplot(lizards, aes(site, weight)) +
  geom_jitter(aes(color = common_name)) +
  theme_light()
```

```{r}
ggplot(lizards, aes(total_length, weight)) + 
  geom_point() +
  labs(title = "Lizard Size",
       x = "Total length (mm)",
       y = "Weight (g)")
```

```{r}
ggplot(lizards, aes(total_length, weight)) +
  geom_point() +
  facet_wrap(~common_name, ncol = 3, scales = "free") +
  labs(x = "Total length (mm)", y = "Weight (grams)")
```

```{r}
ggplot(lizards, aes(total_length, weight)) +
  geom_point() +
  facet_grid(sex ~ tail)
```

```{r}
lizards_counts <- lizards %>% 
  count(common_name)

ggplot(lizards_counts, aes(n, fct_reorder(common_name, n))) +
  geom_col()
```

```{r}
ggplot(data = lizards, aes(total_length, weight)) +
  geom_point(aes(color = common_name),
             size = 1.2) +
  theme_light() +
  labs(x = "Total length (mm)",
       y = "Weight (grams)",
       title = "Lizard Size") +
  facet_wrap(~ common_name)
```

```{r}
ggplot(lizards, aes(y = fct_infreq(common_name))) + 
  geom_bar(aes(fill = site)) +
  theme_light() +
  labs(x = "lizard counts",
       y = "species (common name)") +
  facet_grid(sex ~ tail)
```


```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point() +
  scale_x_continuous(breaks = c(0, 250, 500), 
                     limits = c(0, 500)) +
  scale_y_continuous(breaks = seq(from = 0, to = 70, by = 10), 
                     limits = c(0, 70)) +
  theme_light()
```

```{r}
lizard_counts <- lizards %>% 
  mutate(date = lubridate::mdy(date)) %>% 
  count(date)

ggplot(data = lizard_counts, aes(x = date, y = n)) +
  geom_line() +
  scale_x_date(breaks = scales::breaks_width("3 years"), # See date_breaks for next year!
               labels = scales::label_date("'%y")) + # See date_labels for next year!
  scale_y_log10(labels = scales::label_scientific()) +
  labs(x = "Date",
       y = "Number of lizards (n)")
```

```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point(aes(color = weight)) 
  
# scale_color_gradient(low = "red", high = "navy")
  
# scale_color_gradientn(colors = c("orange","red", "purple", "navy", "black"))
  
# scale_color_steps2(low = "green", mid = "black", high = "red", midpoint = 150, breaks = c(50, 75, 150, 180, 220, 280))
```

```{r}
p <- ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point()

p + 
  theme(panel.grid = element_blank(),
        panel.grid.major = element_line(color = "red"),
        plot.background = element_rect(fill = "pink"),
        text = element_text(size = 12, family = "serif"),
        axis.text.x = element_text(color = "blue"),
        axis.text.y = element_text(color = "green"),
        panel.background = element_rect(fill = "yellow", color = "orange"))

```

```{r}
p +
  geom_hline(yintercept = mean(lizards$weight), color = "blue", linetype = "dashed") +
  geom_vline(xintercept = 100, color = "red") +
  annotate("text", x = 100, y = 50, label ="WOWOOWoooo", color = "purple") +
  annotate("text", x = 350, y = mean(lizards$weight) + 2, label = "Mean weight", color = "black")
```

```{r}
mono <- read_csv(here("data_tidy", "mono.csv"))

ggplot(mono, aes(year, lake_level)) +
  geom_rect(aes(xmin = 1941,
                xmax = 1983,
                ymin = 6350,
                ymax = 6440),
            fill = "gray90",
            ) +
  geom_line() + 
  labs(x = "Year",
       y = "Lake surface level\n(feet above sea level)\n",
       title = "Mono Lake (1850 - 2017)", 
       caption = "Data: Mono Basin Clearinghouse") +
  scale_y_continuous(limits = c(6350, 6440),
                     breaks = c(6370, 6400, 6430),
                     expand = c(0,0),
                     labels = scales::label_comma()) +
  scale_x_continuous(limits = c(1850, 2020), 
                     expand = c(0,0),
                     breaks = seq(1850, 2010, by = 20)) +
  geom_hline(yintercept = 6360, linetype = "dashed") +
  annotate("text", x = 1910, y = 6370,
           label = "Decreased shrimp abundance expected\n(6,360 feet above sea level)\n") +
  theme_minimal() +
   annotate("text", x = 1962, y = 6425, 
           label = "unrestricted diversions\n(1941 - 1983)",
           size = 3)
  
```










